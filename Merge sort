#include<stdio.h>
#include <stdlib.h>
void merge(int *arr,int left,int mid,int right)
{
    int n1=mid-left+1;
    int n2=right-mid;
    
    int*l=(int*)malloc(n1*sizeof(int));
    int *r=(int*)malloc(n2*sizeof(int));
    
    for(int i =0;i<n1;i++)
    l[i]=arr[i+left];
    for(int i=0;i<n2;i++)
    r[i]=arr[mid+1+i];
    
    int i=0,j=0,k=left;
    
    while(i<n1&&j<n2)
    {
        if(l[i]>r[j])
        arr[k++]=r[j++];
        else
        arr[k++]=l[i++];
    }
    
    while(i<n1)
    arr[k++]=l[i++];
    while(j<n2)
    arr[k++]=r[j++];
    
    free(l);
    free(r);
    
}

void msort(int *arr,int left,int right)
{
    if(left<right)
    {
        int mid = (left+right)/2;
        msort(arr,left,mid);
        msort(arr,mid+1,right);
        merge(arr,left,mid,right);
    }
    
}

int main()
{   
    int size;
    printf("enter size of array : ");
    scanf("%d",&size);
    int arr[size];
    printf("enter array elements");
    for(int i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
    msort(arr,0,size-1);
    for(int i=0;i<size;i++)
    {
        printf("%d ",arr[i]);
    }
}
